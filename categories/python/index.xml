<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on A Potpourri of Data Science Topics for Analysts</title>
    <link>/categories/python/</link>
    <description>Recent content in Python on A Potpourri of Data Science Topics for Analysts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Jul 2020 21:17:58 +0200</lastBuildDate>
    
	<atom:link href="/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jupyter Notebooks: Boost your productivity with Extensions and Magic Commands</title>
      <link>/2020/07/12/jupyter-notebooks-boost-your-productivity-with-extensions-and-magic-commands/</link>
      <pubDate>Sun, 12 Jul 2020 21:17:58 +0200</pubDate>
      
      <guid>/2020/07/12/jupyter-notebooks-boost-your-productivity-with-extensions-and-magic-commands/</guid>
      <description>In this blogpost I will share some tips for working with Jupyter Notebooks. Those tips greatly improved my productivity when working with Jupyter Notebooks and I wish someone would have told me earlier. The two main topics of this post are extensions and magic commands.
Jupyter Extensions Have you ever missed a feature in your Jupyter Notebook that IDEs have? E.g. you were hoping for autocompletion or automatically formatting code? Then there might be a Jupyter Notebook extension for you.</description>
    </item>
    
    <item>
      <title>Plotting with Seaborn</title>
      <link>/2019/09/10/plotting-with-seaborn/</link>
      <pubDate>Tue, 10 Sep 2019 20:17:58 +0200</pubDate>
      
      <guid>/2019/09/10/plotting-with-seaborn/</guid>
      <description>&lt;p&gt;Seaborn is a python library for creating plots. It is based on &lt;a href=&#34;https://matplotlib.org&#34;&gt;matplotlib &lt;/a&gt; and provides a high-level interface for drawing statistical graphics.&lt;/p&gt;
&lt;p&gt;Seaborn integrates nicely with pandas: It operates on DataFrames and arrays and does aggregations and semantic mapping automatically, which makes it a quick, convenient option for data vizualization in your data projects. One you understand the basic concepts, you can create plots really easily without using stack overflow too much.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mastering Data Preparation with Pandas: Subsetting, Filtering and Joining DataFrames</title>
      <link>/2019/08/18/mastering-data-preparation-with-pandas-subsetting-filtering-and-joining-dataframes/</link>
      <pubDate>Sun, 18 Aug 2019 10:55:48 +0200</pubDate>
      
      <guid>/2019/08/18/mastering-data-preparation-with-pandas-subsetting-filtering-and-joining-dataframes/</guid>
      <description>table { width:80% !important;}  When I started working with pandas I noticed that there were so many ways how to subset, filter and join data with pandas. But I was lacking a systematic overview. How do the different approaches differ and when to use which?
In this blogpost we&amp;rsquo;ll look at different ways for subsetting, filtering and combining DataFrames.
Subsetting Data: Selecting subsets of rows and columns by labels and positions .</description>
    </item>
    
  </channel>
</rss>