<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>search on A Potpourri of Data Science Topics for Analysts</title>
    <link>/tags/search/</link>
    <description>Recent content in search on A Potpourri of Data Science Topics for Analysts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Oct 2020 18:36:40 +0100</lastBuildDate><atom:link href="/tags/search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pointwise, Pairswise and Listwise Learning to Rank Models - Three Approaches to Optimize Relative Ordering</title>
      <link>/2020/10/15/pointwise-pairswise-and-listwise-learning-to-rank-models-three-approaches-to-optimize-relative-ordering/</link>
      <pubDate>Thu, 15 Oct 2020 18:36:40 +0100</pubDate>
      
      <guid>/2020/10/15/pointwise-pairswise-and-listwise-learning-to-rank-models-three-approaches-to-optimize-relative-ordering/</guid>
      <description>&lt;p&gt;In many scenarios, such as a google search or a product recommendation in an online shop, we have tons of data and limited space to display it. We cannot show all the products of an online shop to the user as a possible next best offer. Neither would a user want to scroll through all the pages indexed by a search engine to find the most relevant page that matches his search keywords. The most relevant content should be on top. Learning to rank (LTR) models are supervised machine learning models that attempt to optimize the order of items. So compared to classification or regression models, they do not care about exact scores or predictions, but the relative order. LTR models are typically applied in search engines, but gained popularity in other fields such as product recommendations as well.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
