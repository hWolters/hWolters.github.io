<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Analytics on My R Blog</title>
    <link>/./tags/analytics/</link>
    <description>Recent content in Analytics on My R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/./tags/analytics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using R Markdown for recurring Reports</title>
      <link>/./2018/11/05/using-r-markdown-for-recurring-reports/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/./2018/11/05/using-r-markdown-for-recurring-reports/</guid>
      <description>In this post I will show you some of my best practises for using R Markdown for reporting. We will cover
How to create beautiful tables with conditional formating with kableExtra
 How to include your results in the (Markdown) text
 How to include global variables.
  Create beautiful tables with kableExtra kableExtra is a nice library that allows you to format and style your tables. It workds similar to ggplot2: You create a base table and then add formating layers with the pipe operator %&amp;gt;%.</description>
    </item>
    
  </channel>
</rss>