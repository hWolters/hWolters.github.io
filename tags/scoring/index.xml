<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scoring on A Potpourri of Data Science Topics for Analysts</title>
    <link>/tags/scoring/</link>
    <description>Recent content in Scoring on A Potpourri of Data Science Topics for Analysts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Jun 2020 18:48:24 +0100</lastBuildDate><atom:link href="/tags/scoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mastering ElasticSearch Queries If You Have Only Worked With SQL Before</title>
      <link>/2020/06/27/mastering-elasticsearch-queries-if-you-have-only-worked-with-sql-before/</link>
      <pubDate>Sat, 27 Jun 2020 18:48:24 +0100</pubDate>
      
      <guid>/2020/06/27/mastering-elasticsearch-queries-if-you-have-only-worked-with-sql-before/</guid>
      <description>Elasticsearch is often the storage engine of choice for storing and querying full text data. But writing an ElasticSearch query is pretty different compared to querying a relational database in SQL. In this blogpost, you will learn some basics you need to understand before working with ElasticSearch. In the second part, you learn how to write queries in ElasticSearch.Â ElasticSearch uses many of the same concepts as your SQL Database. The terminology is just a little different.</description>
    </item>
    
    <item>
      <title>How the Inverted Index and Scoring Work in ElasticSearch</title>
      <link>/2020/06/24/how-the-inverted-index-and-scoring-work-in-elasticsearch/</link>
      <pubDate>Wed, 24 Jun 2020 08:05:59 +0200</pubDate>
      
      <guid>/2020/06/24/how-the-inverted-index-and-scoring-work-in-elasticsearch/</guid>
      <description>Searching through full text fields with regexes in relational database systems like PostgreSQL or MySQL is painful: The query latency is high and your results will be unordered, so you have no idea how relevant your query results are. Elasticsearch is often the storage engine of choice for storing and querying full text data. In ElasticSearch querying fulltext fields is among the least resource intensive tasks and your query results are ordered putting the most relevant results on top.</description>
    </item>
    
  </channel>
</rss>
