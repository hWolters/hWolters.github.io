<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on A Potpourri of Data Science &amp; Data Engineering Topics</title>
    <link>/tags/sql/</link>
    <description>Recent content in SQL on A Potpourri of Data Science &amp; Data Engineering Topics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Dec 2022 10:07:54 +0100</lastBuildDate><atom:link href="/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mastering Differences and Pitfalls when Switching SQL Databases: PostgreSQL vs. MySQL vs. SQLITE vs. Hive vs. Presto (AWS Athena)</title>
      <link>/2022/12/09/mastering-differences-and-pitfalls-when-switching-sql-databases-postgresql-vs.-mysql-vs.-sqlite-vs.-hive-vs.-presto-aws-athena/</link>
      <pubDate>Fri, 09 Dec 2022 10:07:54 +0100</pubDate>
      
      <guid>/2022/12/09/mastering-differences-and-pitfalls-when-switching-sql-databases-postgresql-vs.-mysql-vs.-sqlite-vs.-hive-vs.-presto-aws-athena/</guid>
      <description>&lt;p&gt;Transitioning to another SQL database? This blog post is for you. Shifting from one SQL dialect to another can be a journey full of surprises. While the basic syntax (SELECT FROM WHERE) is similar, there are important differences, that will make your queries slow, fast, fail or worse: fail silently!&lt;/p&gt;
&lt;p&gt;In this blog post I&amp;rsquo;ll guide you through the intricate pathways of databases I have come across during my work as a data scientist: Postgres, MySQL, SQLite, Hive and Presto (AWS Athena). We&amp;rsquo;ll start with a brief introduction into the databases and some differences. Then we jump into three pitfalls you have to be aware of.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Working with Complex Datatypes in Hive</title>
      <link>/2020/06/07/working-with-complex-datatypes-in-hive/</link>
      <pubDate>Sun, 07 Jun 2020 08:29:09 +0200</pubDate>
      
      <guid>/2020/06/07/working-with-complex-datatypes-in-hive/</guid>
      <description>table { width:80% !important;}  The basic idea of complex datatypes is to store multiple values in a single column. So if you are working with a Hive database and you query a column, but then you notice &amp;ldquo;This value I need is trapped in a column among other values&amp;hellip;&amp;rdquo; you just came across a complex a.k.a. nested datatype.
There are three types: arrays, maps and structs. First, you have to understand, which types are present.</description>
    </item>
    
  </channel>
</rss>
